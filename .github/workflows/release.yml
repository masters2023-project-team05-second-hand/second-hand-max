# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java, React CI/CD Using Docker

on:
  pull_request:
    branches: [ release ]
  workflow_dispatch:
    
permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    environment: release

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
      
     # echo "${{ secrets.APPLICATION_RELEASE }}" | base64 --decode > ./application.yml    
    - name: Make application-release.yml
      run: |
        cd ./be/src/main/resources
        touch ./application.yml
        echo "${{ secrets.APPLICATION_RELEASE }}" >> ./application.yml

    - name: Build with Gradle
      run: |
        cd ./be
        ./gradlew bootjar

    - name: Make Dockerfile and Push
      run: |
        cd ./be
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -f dockerfile-api -t ${{ secrets.DOCKER_REPO }}/api .
        docker push ${{ secrets.DOCKER_REPO }}/api

    - name: Install Node.js and Npm
      uses: actions/setup-node@v2
      with:
        node-version: '18.17.1'
    
    - name: Make .env
      run: |
        cd ./fe
        touch .env
        echo "${{ secrets.ENV }}" >> .env

    - name: Make Dockerfile and Push
      run: |
        cd ./fe
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -f dockerfile-web -t ${{ secrets.DOCKER_REPO }}/web .
        docker push ${{ secrets.DOCKER_REPO }}/web

    - name: Executing Remote Ssh Commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.KEY }}
        script: |
          sudo docker rm -f $(docker ps -qa)
          sudo docker pull ${{ secrets.DOCKER_REPO }}/api
          sudo docker pull ${{ secrets.DOCKER_REPO }}/web
          docker compose up -d
          docker image prune -f
